apply plugin: 'com.android.application'
apply plugin: 'com.huawei.agconnect'
apply plugin: 'com.hihonor.mcs.asplugin'

android {
    //加载资源
    Properties properties = new Properties()
    InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream() ;
    properties.load( inputStream )

    signingConfigs {
        debug {
            storeFile file(properties.getProperty('DEBUG_STORE_FILE_PATH', './keystore/sdkdemo.jks'))
            storePassword properties.getProperty('DEBUG_STORE_PASSWORD', '123456')
            keyAlias = properties.getProperty('DEBUG_KEY_ALIAS', 'easemob')
            keyPassword properties.getProperty('DEBUG_KEY_PASSWORD', '123456')
        }
        release {
            storeFile file(properties.getProperty('DEBUG_STORE_FILE_PATH', './keystore/sdkdemo.jks'))
            storePassword properties.getProperty('DEBUG_STORE_PASSWORD', '123456')
            keyAlias = properties.getProperty('DEBUG_KEY_ALIAS', 'easemob')
            keyPassword properties.getProperty('DEBUG_KEY_PASSWORD', '123456')
        }
    }
    compileSdk 34
    //buildToolsVersion "30.0.3"
    defaultConfig {
        applicationId "com.hyphenate.chatdemo"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 124
        versionName "4.4.1"
        multiDexEnabled true
        //为了兼容5.0以下使用vector图标
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //指定room.schemaLocation生成的文件路径  处理Room 警告 Schema export Error
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
        // If you use your own Agora Chat appkey, you should deploy your own App Server.
        // See:verification code
        buildConfigField ("String", "APP_SERVER_PROTOCOL", "\"https\"")
        buildConfigField ("String", "APP_SERVER_DOMAIN", "\"a1.easemob.com\"")
        buildConfigField ("String", "APP_BASE_USER", "\"/inside/app/user/\"")
        buildConfigField ("String", "APP_SERVER_LOGIN", "\"login/V2\"")
        buildConfigField ("String", "APP_SERVER_REGISTER", "\"register\"")
        buildConfigField ("String", "APP_SERVE_CHECK_RESET", "\"reset/password\"")
        buildConfigField ("String", "APP_SERVE_CHANGE_PWD", "\"/password\"")
        buildConfigField ("String", "APP_SEND_SMS_FROM_SERVER", "\"/inside/app/sms/send\"")
        buildConfigField ("String", "APP_VERIFICATION_CODE", "\"/inside/app/image/\"")


        manifestPlaceholders = [EASEMOB_APPKEY: properties.getProperty("EASEMOB_APPKEY", "******"),
                                VIVO_PUSH_APPKEY: properties.getProperty("VIVO_PUSH_APPKEY", "******"),
                                VIVO_PUSH_APPID: properties.getProperty("VIVO_PUSH_APPID", "******"),
                                HONOR_PUSH_APPID: properties.getProperty("HONOR_PUSH_APPID", "******"),
                                BAIDU_LOCATION_APPKEY: properties.getProperty("BAIDU_LOCATION_APPKEY", "******")
        ]
        ndk {
            abiFilters  "arm64-v8a","armeabi-v7a"
        }
        //用于设置使用as打包so时指定输出目录
        externalNativeBuild {
            ndkBuild {
//                arguments "NDK_LIBS_OUT=libs", "all"
                abiFilters  "arm64-v8a","armeabi-v7a"
                arguments '-j8'
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            //applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
        }
    }
    sourceSets {
        main {
            //jniLibs.srcDirs = ['libs']
            jni.srcDirs = []
        }
    }

    //use legacy for android 6.0，SDK3.6.8后移除
    //useLibrary 'org.apache.http.legacy'
    //自3.6.0开始需要java8的支持
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {//加上这写代码
        pickFirst 'lib/x86/libsqlite.so'
        pickFirst 'lib/x86_64/libsqlite.so'
        pickFirst 'lib/armeabi-v7a/libsqlite.so'
        pickFirst 'lib/arm64-v8a/libsqlite.so'
        pickFirst 'lib/x86/libhyphenate.so'
        pickFirst 'lib/x86_64/libhyphenate.so'
        pickFirst 'lib/armeabi-v7a/libhyphenate.so'
        pickFirst 'lib/arm64-v8a/libhyphenate.so'
    }

    buildFeatures{
        viewBinding = true
    }

    //打开注释后，可以直接在studio里查看和编辑emclient-linux里的代码
//    externalNativeBuild {
//        ndkBuild {
//            path file('jni/Android.mk')
//        }
//    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    //ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    // google bottom navigation bar
    implementation 'com.ashokvarma.android:bottom-navigation-bar:2.1.0'
    // resolve 64k limit
    implementation 'com.android.support:multidex:1.0.3'
    // hms push
    implementation 'com.huawei.hms:push:6.3.0.302'
    // hihonor push
    implementation 'com.hihonor.mcs:push:7.0.41.301'
    // meizu push
    implementation 'com.meizu.flyme.internet:push-internal:4.0.4@aar'//配置集成sdk
    //oppo push
    implementation (name:'oppo_push_3.0.0',ext:'aar')
    //oppo push需添加以下依赖
    implementation 'com.google.code.gson:gson:2.6.2'
    implementation 'commons-codec:commons-codec:1.6'
    implementation 'androidx.annotation:annotation:1.1.0'
    // Google firebase cloud messaging
    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:29.1.0')

    // Declare the dependencies for the Firebase Cloud Messaging and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-analytics'
    // fresh and load more
    api 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.5.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    // room
    implementation "androidx.room:room-runtime:2.4.0-alpha04"
    annotationProcessor "androidx.room:room-compiler:2.4.0-alpha04"
    // parse
    implementation 'com.parse:parse-android:1.13.1'
    // bugly
    implementation 'com.tencent.bugly:crashreport:2.6.6.1'
    implementation 'com.tencent.bugly:nativecrashreport:3.3.1'

    implementation 'pub.devrel:easypermissions:3.0.0'
    implementation 'org.jsoup:jsoup:1.13.1'

    // EaseIMKit
//    api (project(path: ':ease-im-kit'))
    implementation 'io.hyphenate:ease-im-kit:4.4.1'
    // EaseIMKit依赖，必须添加环信IM SDK
//    implementation project(path: ':hyphenatechatsdk')
    implementation 'io.hyphenate:hyphenate-chat:4.4.1'

    //EaseCallKit依赖，必须添加环信IM SDK
//    api project(':ease-call-kit')
    implementation 'io.hyphenate:ease-call-kit:4.4.1'

}

// ADD THIS AT THE BOTTOM
apply plugin: 'com.google.gms.google-services'
repositories {
    mavenCentral()
    flatDir{
        dirs 'libs'
    }
}
